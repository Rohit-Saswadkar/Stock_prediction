import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense,Flatten

(X_train, y_train),(X_test,y_test) = keras.datasets.mnist.load_data()

X_train.shape

y_train

import matplotlib.pyplot as plt
plt.imshow(X_train[0])

X_train = X_train/255 #getting values in 0 to 10
X_test = X_test/255

X_train[0]

model = Sequential()  # getting keras sequential model

# now i am going to flatten the layers of the data ie 2d to 1d
model.add(Flatten(input_shape=(28,28)))
model.add(Dense(128, activation = 'relu'))
model.add(Dense(10,activation = 'softmax'))
model.add(Dense(32,activation = 'relu'))

model.summary()

model.compile(loss= 'sparse_categorical_crossentropy', optimizer = 'Adam',metrics=['accuracy'])

history = model.fit(X_train, y_train, epochs=25, validation_split=0.2)

# predictions
y_prob = model.predict(X_test)

y_pred = y_prob.argmax(axis=1)

from sklearn.metrics import accuracy_score
accuracy_score(y_test, y_pred)

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])

X_test # its zeroth image

plt.imshow(X_test[0])

# model predictions
model.predict(X_test[0].reshape(1,28,28))

model.predict(X_test[2].reshape(1,28,28))
